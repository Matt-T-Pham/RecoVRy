{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\mtp8\\\\Documents\\\\GitHub\\\\we\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:\\\\Users\\\\mtp8\\\\Documents\\\\GitHub\\\\we\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{useState,useEffect}from'react';import'../css/PatientsPage.scss';import ListSubheader from'@material-ui/core/ListSubheader';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import Button from'@material-ui/core/Button';import CaretIcon from'../images/right_caret.png';import Modal from'@material-ui/core/Modal';import TextField from'@material-ui/core/TextField';import{useStateValue}from'../state';import TrashIcon from'../images/trash.png';import TransferIcon from'../images/transfer.png';import PlusIcon from'../images/plus.png';import MinusIcon from'../images/minus.png';import UpCaretIcon from'../images/up-caret.png';import DownCaretIcon from'../images/down-caret.png';import ConfirmIcon from'../images/tick.png';var addUser=function addUser(therapistsUser,userData,patients,setPatients){fetch(\"\".concat(window.location.origin,\"/adduser\"),{method:'PUT',body:JSON.stringify({therapistsUser:therapistsUser,username:userData.username,password:userData.password,firstName:userData.firstName,lastName:userData.lastName,address:userData.address,phoneNumber:userData.phoneNumber,email:userData.email,accessLevel:'patient'}),headers:{'Content-Type':'application/json'}}).then(function(response){if(!response.ok)throw Error(response.statusText);setPatients(patients.concat({firstName:userData.firstName,lastName:userData.lastName,username:userData.username,workouts:[]}));}).catch(console.log);};var assignWorkout=function assignWorkout(username,WID,workoutName,patients,setPatients){fetch(\"\".concat(window.location.origin,\"/assignworkout\"),{method:'PUT',body:JSON.stringify({username:username,WID:WID}),headers:{'Content-Type':'application/json'}}).then(function(response){if(!response.ok)throw Error(response.statusText);var changed=JSON.parse(JSON.stringify(patients));var userIdx=changed.findIndex(function(p){return p.username===username;});changed[userIdx][\"workouts\"]=changed[userIdx][\"workouts\"].concat({id:WID,name:workoutName});setPatients(changed);}).catch(console.log);};var addExerciseToWorkout=function addExerciseToWorkout(i,exercises,setExercises,selectedExercises,setSelectedExercises,builtWorkout,setBuiltWorkout){var addedExercise=exercises.splice(i,1);setSelectedExercises(selectedExercises.concat(addedExercise));setExercises(Object.assign([],exercises));builtWorkout.exercises.push(_objectSpread({},addedExercise[0],{reps:1}));setBuiltWorkout(Object.assign({},builtWorkout));};var saveNewWorkout=function saveNewWorkout(username,newWorkout,workouts,setWorkouts,setWorkoutModalOpen){fetch(\"\".concat(window.location.origin,\"/addnewworkout?user=\").concat(username),{method:'PUT',body:JSON.stringify(newWorkout),headers:{'Content-Type':'application/json'}}).then(function(response){if(!response.ok)throw Error(response.statusText);setWorkoutModalOpen(false);response.json().then(function(json){setWorkouts(workouts.concat(json));});}).catch(console.log);};var deletePatient=function deletePatient(idx,patients,setPatients){fetch(\"\".concat(window.location.origin,\"/deleteuser?user=\").concat(patients[idx].username),{method:'DELETE'}).then(function(response){if(!response.ok)throw Error(response.statusText);var changed=Object.assign([],patients);changed.splice(idx,1);console.log(changed);setPatients(changed);}).catch(console.log);};var getPatients=function getPatients(username,setPatients){fetch(\"\".concat(window.location.origin,\"/getpatients?user=\").concat(username)).then(function(response){if(!response.ok)throw Error(response.statusText);console.log(response);response.json().then(function(json){setPatients(json);});}).catch(console.log);};var getWorkouts=function getWorkouts(username,setWorkouts){fetch(\"\".concat(window.location.origin,\"/getcreatedworkouts?user=\").concat(username)).then(function(response){if(!response.ok)throw Error(response.statusText);console.log(response);response.json().then(function(json){setWorkouts(json);});}).catch(console.log);};var getExercises=function getExercises(username,setExercises){fetch(\"\".concat(window.location.origin,\"/getcreatedexercises?user=\").concat(username)).then(function(response){if(!response.ok)throw Error(response.statusText);console.log(response);response.json().then(function(json){setExercises(json);});}).catch(console.log);};var Patients=function Patients(){// const tempW = [\n//     {\n//         \"id\": 1,\n//         \"name\": \"first workout!\"\n//     },\n//     {\n//         \"id\": 2,\n//         \"name\": \"A test workout\"\n//     },\n//     {\n//         \"id\": 3,\n//         \"name\": \"Another test workout\"\n//     },\n//     {\n//         \"id\": 4,\n//         \"name\": \"Lots of people do this workout\"\n//     },\n//     {\n//         \"id\": 5,\n//         \"name\": \"So much abs\"\n//     },\n//     {\n//         \"id\": 6,\n//         \"name\": \"Such many biceps\"\n//     }\n// ]\n// const tempP = [\n//     {\n//         \"firstName\": \"jane\",\n//         \"lastName\": \"joe\",\n//         \"username\": \"joeie\",\n//         \"workouts\": [\n//             {\n//                 \"id\": 1,\n//                 \"name\": \"first workout!\"\n//             },\n//             {\n//                 \"id\": 6,\n//                 \"name\": \"Such many biceps\"\n//             }\n//         ]\n//     },\n//     {\n//         \"firstName\": \"john\",\n//         \"lastName\": \"joe\",\n//         \"username\": \"johnnny\",\n//         \"workouts\": [\n//             {\n//                 \"id\": 1,\n//                 \"name\": \"first workout!\"\n//             }\n//         ]\n//     },\n//     {\n//         \"firstName\": \"zack\",\n//         \"lastName\": \"mulhstein\",\n//         \"username\": \"zackky\",\n//         \"workouts\": [\n//             {\n//                 \"id\": 1,\n//                 \"name\": \"first workout!\"\n//             },\n//             {\n//                 \"id\": 2,\n//                 \"name\": \"A test workout\"\n//             },\n//             {\n//                 \"id\": 3,\n//                 \"name\": \"Another test workout\"\n//             }\n//         ]\n//     },\n//     {\n//         \"firstName\": \"Last\",\n//         \"lastName\": \"One\",\n//         \"username\": \"hoping\",\n//         \"workouts\": [\n//             {\n//                 \"id\": 1,\n//                 \"name\": \"first workout!\"\n//             },\n//             {\n//                 \"id\": 3,\n//                 \"name\": \"Another test workout\"\n//             },\n//             {\n//                 \"id\": 4,\n//                 \"name\": \"Lots of people do this workout\"\n//             },\n//             {\n//                 \"id\": 6,\n//                 \"name\": \"Such many biceps\"\n//             }\n//         ]\n//     }\n// ]\n// const tempE = [\n//     {\n//         \"id\": 1,\n//         \"name\": \"Curls: Bicep Curls\"\n//     },\n//     {\n//         \"id\": 2,\n//         \"name\": \"Squat:Air Squat\"\n//     },\n//     {\n//         \"id\": 3,\n//         \"name\": \"Squat:Back Squat\"\n//     },\n//     {\n//         \"id\": 4,\n//         \"name\": \"High Pull:Sumo High Pull\"\n//     },\n//     {\n//         \"id\": 5,\n//         \"name\": \"squat\"\n//     }\n// ]\nvar _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,1),username=_useStateValue2[0].username;var _useState=useState(),_useState2=_slicedToArray(_useState,2),hoverId=_useState2[0],setHoverId=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),selectedId=_useState4[0],setSelectedId=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),newUserData=_useState6[0],setNewUserData=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),patientModalOpen=_useState8[0],setPatientModalOpen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),workoutModalOpen=_useState10[0],setWorkoutModalOpen=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),patients=_useState12[0],setPatients=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),workouts=_useState14[0],setWorkouts=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),exercises=_useState16[0],setExercises=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),selectedExercises=_useState18[0],setSelectedExercises=_useState18[1];var _useState19=useState({name:'',exercises:[]}),_useState20=_slicedToArray(_useState19,2),builtWorkout=_useState20[0],setBuiltWorkout=_useState20[1];useEffect(function(){getPatients(username,setPatients);getWorkouts(username,setWorkouts);getExercises(username,setExercises);},[username]);return React.createElement(\"div\",{style:{display:'flex',height:\"100%\"}},React.createElement(\"div\",{className:\"Patients__list\"},React.createElement(List,{subheader:React.createElement(ListSubheader,{component:\"div\"},\"Patients\"),className:\"Patients__list--style\"},patients.map(function(data,i){return React.createElement(React.Fragment,{key:i},React.createElement(ListItem,{button:true,onMouseEnter:function onMouseEnter(_){return setHoverId(i);},onMouseLeave:function onMouseLeave(_){return setHoverId(null);},onClick:function onClick(_){return setSelectedId(i);}},React.createElement(ListItemText,{primary:\"\".concat(data.firstName,\" \").concat(data.lastName)}),hoverId===i?React.createElement(\"img\",{src:CaretIcon,alt:\">\",height:16}):React.createElement(React.Fragment,null)));})),React.createElement(Button,{variant:\"contained\",onClick:function onClick(){return setPatientModalOpen(true);}},\"New Patient\")),React.createElement(\"div\",{className:\"Patients__window\"},selectedId!==undefined&&React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"Patients__window__header\"},React.createElement(\"h2\",{style:{marginLeft:\"1rem\"}},patients[selectedId].firstName,\" \",patients[selectedId].lastName),React.createElement(\"img\",{src:TransferIcon,alt:\"Transfer\"}),React.createElement(\"img\",{src:TrashIcon,alt:\"Remove\",onClick:function onClick(){setSelectedId(undefined);deletePatient(selectedId,patients,setPatients);}})),React.createElement(\"div\",{className:\"Patients__window__workouts\"},React.createElement(List,{subheader:React.createElement(ListSubheader,null,\"Prescribed Workouts\"),className:\"Patients__window__workouts__list\"},patients[selectedId].workouts.map(function(data,i){return React.createElement(React.Fragment,{key:i},React.createElement(ListItem,{button:true},React.createElement(ListItemText,{primary:data.name}),React.createElement(\"img\",{src:MinusIcon,alt:\"-\"})));})),React.createElement(\"div\",{id:\"Available-Workouts\",className:\"Patients__window__workouts__list\"},React.createElement(List,{subheader:React.createElement(ListSubheader,null,\"Available Workouts\")},workouts.filter(function(w1){return!patients[selectedId].workouts.some(function(w2){return w1.id===w2.id;});}).map(function(data,i){return React.createElement(React.Fragment,{key:i},React.createElement(ListItem,{button:true,onClick:function onClick(){return assignWorkout(patients[selectedId].username,workouts.filter(function(w1){return!patients[selectedId].workouts.some(function(w2){return w1.id===w2.id;});})[i].id,workouts.filter(function(w1){return!patients[selectedId].workouts.some(function(w2){return w1.id===w2.id;});})[i].name,patients,setPatients);}},React.createElement(\"img\",{src:PlusIcon,alt:\"+\",style:{marginRight:'1.5rem'}}),React.createElement(ListItemText,{primary:data.name})));})),React.createElement(Button,{id:\"Create-Workout-Button\",variant:\"outlined\",onClick:function onClick(){return setWorkoutModalOpen(true);},fullWidth:true},\"Create Workout\"))))),React.createElement(Modal,{open:patientModalOpen,onClose:function onClose(){return setPatientModalOpen(false);}},React.createElement(\"div\",{className:\"Modal\"},React.createElement(\"h2\",{style:{marginLeft:\"1rem\"}},\"NEW PATIENT\"),React.createElement(\"form\",{noValidate:true,autoComplete:\"off\",className:\"Patients__modal__form\"},React.createElement(TextField,{id:\"outlined-basic\",onChange:function onChange(e){return setNewUserData(_objectSpread({},newUserData,{firstName:e.target.value}));},label:\"First Name\",variant:\"outlined\",style:{margin:\"1rem\",gridArea:\"a\"}}),React.createElement(TextField,{id:\"outlined-basic\",onChange:function onChange(e){return setNewUserData(_objectSpread({},newUserData,{lastName:e.target.value}));},label:\"Last Name\",variant:\"outlined\",style:{margin:\"1rem\",gridArea:\"b\"}}),React.createElement(TextField,{id:\"outlined-basic\",onChange:function onChange(e){return setNewUserData(_objectSpread({},newUserData,{email:e.target.value}));},label:\"Email\",variant:\"outlined\",style:{margin:\"1rem\",gridArea:\"c\"}}),React.createElement(TextField,{id:\"outlined-basic\",onChange:function onChange(e){return setNewUserData(_objectSpread({},newUserData,{phoneNumber:e.target.value}));},label:\"Phone Number\",variant:\"outlined\",style:{margin:\"1rem\",gridArea:\"d\"}}),React.createElement(TextField,{id:\"outlined-basic\",onChange:function onChange(e){return setNewUserData(_objectSpread({},newUserData,{address:e.target.value}));},label:\"Address\",variant:\"outlined\",style:{margin:\"1rem\",gridArea:\"e\"}}),React.createElement(TextField,{id:\"outlined-basic\",onChange:function onChange(e){return setNewUserData(_objectSpread({},newUserData,{username:e.target.value}));},label:\"Username\",variant:\"outlined\",style:{margin:\"1rem\",gridArea:\"f\"}}),React.createElement(TextField,{id:\"outlined-basic\",onChange:function onChange(e){return setNewUserData(_objectSpread({},newUserData,{password:e.target.value}));},label:\"Password\",type:\"password\",variant:\"outlined\",style:{margin:\"1rem\",gridArea:\"g\"}}),React.createElement(Button,{variant:\"outlined\",style:{margin:\"1rem\",gridArea:\"h\"},onClick:function onClick(){addUser(username,newUserData,patients,setPatients);setPatientModalOpen(false);}},\"ADD PATIENT\")))),React.createElement(Modal,{open:workoutModalOpen,onClose:function onClose(){return setWorkoutModalOpen(false);}},React.createElement(\"div\",{className:\"Modal\",id:\"WorkoutBuilderModal\"},React.createElement(\"h2\",{style:{marginLeft:\"1rem\"}},\"BUILD NEW WORKOUT\"),React.createElement(\"div\",{className:\"WorkoutBuilder\"},React.createElement(List,{subheader:React.createElement(ListSubheader,null,\"Available Exercises\"),className:\"WorkoutBuilder__available\"},exercises.map(function(data,i){return React.createElement(React.Fragment,{key:i},React.createElement(ListItem,{button:true,onClick:function onClick(){return addExerciseToWorkout(i,exercises,setExercises,selectedExercises,setSelectedExercises,builtWorkout,setBuiltWorkout);}},React.createElement(ListItemText,{primary:data.name}),React.createElement(\"img\",{src:PlusIcon,alt:\"+\"})));})),React.createElement(List,{subheader:React.createElement(ListSubheader,null,\"Selected Exercises\",React.createElement(\"span\",{style:{float:'right'}},\"Reps\")),className:\"WorkoutBuilder__selected\"},selectedExercises.map(function(data,i){return React.createElement(React.Fragment,{key:i},React.createElement(ListItem,null,React.createElement(\"img\",{src:MinusIcon,alt:\"-\",style:{marginRight:'1.5rem'}}),React.createElement(ListItemText,{primary:data.name}),React.createElement(\"div\",{className:\"WorkoutBuilder__selected--reps\"},React.createElement(\"span\",{style:{marginRight:'.5rem'}},builtWorkout.exercises[i].reps),React.createElement(\"div\",{className:\"WorkoutBuilder__selected__carets\"},React.createElement(\"img\",{src:UpCaretIcon,height:8,alt:\"^\",onClick:function onClick(){builtWorkout.exercises[i].reps++;setBuiltWorkout(Object.assign({},builtWorkout));}}),React.createElement(\"img\",{src:DownCaretIcon,height:8,alt:\"v\",onClick:function onClick(){if(builtWorkout.exercises[i].reps>1){builtWorkout.exercises[i].reps--;setBuiltWorkout(Object.assign({},builtWorkout));}}})))));}))),React.createElement(\"div\",{id:\"Workout-Confirmation-div\"},React.createElement(TextField,{label:\"Workout Name\",onChange:function onChange(e){builtWorkout.name=e.target.value;setBuiltWorkout(Object.assign({},builtWorkout));},fullWidth:true}),React.createElement(\"img\",{src:ConfirmIcon,alt:\"Confirm\",height:24,onClick:function onClick(){return saveNewWorkout(username,builtWorkout,workouts,setWorkouts,setWorkoutModalOpen);}})))));};export default Patients;","map":{"version":3,"sources":["C:/Users/mtp8/Documents/GitHub/we/src/pages/PatientsPage.js"],"names":["React","useState","useEffect","ListSubheader","List","ListItem","ListItemText","Button","CaretIcon","Modal","TextField","useStateValue","TrashIcon","TransferIcon","PlusIcon","MinusIcon","UpCaretIcon","DownCaretIcon","ConfirmIcon","addUser","therapistsUser","userData","patients","setPatients","fetch","window","location","origin","method","body","JSON","stringify","username","password","firstName","lastName","address","phoneNumber","email","accessLevel","headers","then","response","ok","Error","statusText","concat","workouts","catch","console","log","assignWorkout","WID","workoutName","changed","parse","userIdx","findIndex","p","id","name","addExerciseToWorkout","i","exercises","setExercises","selectedExercises","setSelectedExercises","builtWorkout","setBuiltWorkout","addedExercise","splice","Object","assign","push","reps","saveNewWorkout","newWorkout","setWorkouts","setWorkoutModalOpen","json","deletePatient","idx","getPatients","getWorkouts","getExercises","Patients","hoverId","setHoverId","selectedId","setSelectedId","newUserData","setNewUserData","patientModalOpen","setPatientModalOpen","workoutModalOpen","display","height","map","data","_","undefined","marginLeft","filter","w1","some","w2","marginRight","e","target","value","margin","gridArea","float"],"mappings":"mUAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,0BAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAASC,aAAT,KAA8B,UAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,oBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,0BAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,cAAD,CAAiBC,QAAjB,CAA2BC,QAA3B,CAAqCC,WAArC,CAAqD,CACjEC,KAAK,WAAIC,MAAM,CAACC,QAAP,CAAgBC,MAApB,aAAsC,CACvCC,MAAM,CAAE,KAD+B,CAEvCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACX,cAAc,CAAEA,cAAjB,CACjBY,QAAQ,CAAEX,QAAQ,CAACW,QADF,CAEjBC,QAAQ,CAAEZ,QAAQ,CAACY,QAFF,CAGjBC,SAAS,CAAEb,QAAQ,CAACa,SAHH,CAIjBC,QAAQ,CAAEd,QAAQ,CAACc,QAJF,CAKjBC,OAAO,CAAEf,QAAQ,CAACe,OALD,CAMjBC,WAAW,CAAEhB,QAAQ,CAACgB,WANL,CAOjBC,KAAK,CAAEjB,QAAQ,CAACiB,KAPC,CAQjBC,WAAW,CAAE,SARI,CAAf,CAFiC,CAWnCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAX0B,CAAtC,CAAL,CAcOC,IAdP,CAcY,SAACC,QAAD,CAAc,CAClB,GAAG,CAACA,QAAQ,CAACC,EAAb,CAAiB,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CAEjBtB,WAAW,CAACD,QAAQ,CAACwB,MAAT,CAAgB,CAACZ,SAAS,CAAEb,QAAQ,CAACa,SAArB,CAAgCC,QAAQ,CAAEd,QAAQ,CAACc,QAAnD,CAA6DH,QAAQ,CAAEX,QAAQ,CAACW,QAAhF,CAA0Fe,QAAQ,CAAE,EAApG,CAAhB,CAAD,CAAX,CACH,CAlBL,EAkBOC,KAlBP,CAkBaC,OAAO,CAACC,GAlBrB,EAmBC,CApBL,CAsBA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACnB,QAAD,CAAWoB,GAAX,CAAgBC,WAAhB,CAA6B/B,QAA7B,CAAuCC,WAAvC,CAAuD,CACzEC,KAAK,WAAIC,MAAM,CAACC,QAAP,CAAgBC,MAApB,mBAA4C,CAC7CC,MAAM,CAAE,KADqC,CAE7CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACC,QAAQ,CAAEA,QAAX,CAAqBoB,GAAG,CAAEA,GAA1B,CAAf,CAFuC,CAG7CZ,OAAO,CAAE,CACL,eAAgB,kBADX,CAHoC,CAA5C,CAAL,CAMGC,IANH,CAMQ,SAACC,QAAD,CAAc,CAClB,GAAG,CAACA,QAAQ,CAACC,EAAb,CAAiB,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CAEjB,GAAIS,CAAAA,OAAO,CAAGxB,IAAI,CAACyB,KAAL,CAAWzB,IAAI,CAACC,SAAL,CAAeT,QAAf,CAAX,CAAd,CACA,GAAMkC,CAAAA,OAAO,CAAGF,OAAO,CAACG,SAAR,CAAkB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC1B,QAAF,GAAeA,QAAnB,EAAnB,CAAhB,CACAsB,OAAO,CAACE,OAAD,CAAP,CAAiB,UAAjB,EAA+BF,OAAO,CAACE,OAAD,CAAP,CAAiB,UAAjB,EAA6BV,MAA7B,CAAoC,CAACa,EAAE,CAAEP,GAAL,CAAUQ,IAAI,CAAEP,WAAhB,CAApC,CAA/B,CACA9B,WAAW,CAAC+B,OAAD,CAAX,CACH,CAbD,EAaGN,KAbH,CAaSC,OAAO,CAACC,GAbjB,EAcH,CAfD,CAiBA,GAAMW,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,CAAD,CAAIC,SAAJ,CAAeC,YAAf,CAA6BC,iBAA7B,CAAgDC,oBAAhD,CAAsEC,YAAtE,CAAoFC,eAApF,CAAyG,CAClI,GAAMC,CAAAA,aAAa,CAAGN,SAAS,CAACO,MAAV,CAAiBR,CAAjB,CAAoB,CAApB,CAAtB,CACAI,oBAAoB,CAACD,iBAAiB,CAACnB,MAAlB,CAAyBuB,aAAzB,CAAD,CAApB,CACAL,YAAY,CAACO,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBT,SAAlB,CAAD,CAAZ,CACAI,YAAY,CAACJ,SAAb,CAAuBU,IAAvB,kBAAgCJ,aAAa,CAAC,CAAD,CAA7C,EAAkDK,IAAI,CAAE,CAAxD,IACAN,eAAe,CAACG,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,YAAlB,CAAD,CAAf,CACH,CAND,CAQA,GAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAC3C,QAAD,CAAW4C,UAAX,CAAuB7B,QAAvB,CAAiC8B,WAAjC,CAA8CC,mBAA9C,CAAsE,CACzFtD,KAAK,WAAIC,MAAM,CAACC,QAAP,CAAgBC,MAApB,gCAAiDK,QAAjD,EAA6D,CAC9DJ,MAAM,CAAE,KADsD,CAE9DC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe6C,UAAf,CAFwD,CAG9DpC,OAAO,CAAE,CACL,eAAgB,kBADX,CAHqD,CAA7D,CAAL,CAMGC,IANH,CAMQ,SAACC,QAAD,CAAc,CAClB,GAAG,CAACA,QAAQ,CAACC,EAAb,CAAiB,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CACjBiC,mBAAmB,CAAC,KAAD,CAAnB,CACApC,QAAQ,CAACqC,IAAT,GAAgBtC,IAAhB,CAAqB,SAACsC,IAAD,CAAU,CAAEF,WAAW,CAAC9B,QAAQ,CAACD,MAAT,CAAgBiC,IAAhB,CAAD,CAAX,CAAoC,CAArE,EACH,CAVD,EAUG/B,KAVH,CAUSC,OAAO,CAACC,GAVjB,EAWH,CAZD,CAcA,GAAM8B,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,CAAM3D,QAAN,CAAgBC,WAAhB,CAAgC,CAClDC,KAAK,WAAIC,MAAM,CAACC,QAAP,CAAgBC,MAApB,6BAA8CL,QAAQ,CAAC2D,GAAD,CAAR,CAAcjD,QAA5D,EAAwE,CAACJ,MAAM,CAAE,QAAT,CAAxE,CAAL,CACCa,IADD,CACM,SAACC,QAAD,CAAc,CAChB,GAAG,CAACA,QAAQ,CAACC,EAAb,CAAiB,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CAEjB,GAAMS,CAAAA,OAAO,CAAGiB,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBlD,QAAlB,CAAhB,CACAgC,OAAO,CAACgB,MAAR,CAAeW,GAAf,CAAoB,CAApB,EACAhC,OAAO,CAACC,GAAR,CAAYI,OAAZ,EACA/B,WAAW,CAAC+B,OAAD,CAAX,CACH,CARD,EAQGN,KARH,CAQSC,OAAO,CAACC,GARjB,EASH,CAVD,CAYA,GAAMgC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAClD,QAAD,CAAWT,WAAX,CAA2B,CAC3CC,KAAK,WAAIC,MAAM,CAACC,QAAP,CAAgBC,MAApB,8BAA+CK,QAA/C,EAAL,CACCS,IADD,CACM,SAACC,QAAD,CAAc,CAChB,GAAG,CAACA,QAAQ,CAACC,EAAb,CAAiB,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CACjBI,OAAO,CAACC,GAAR,CAAYR,QAAZ,EACAA,QAAQ,CAACqC,IAAT,GAAgBtC,IAAhB,CAAqB,SAACsC,IAAD,CAAU,CAAExD,WAAW,CAACwD,IAAD,CAAX,CAAmB,CAApD,EACH,CALD,EAKG/B,KALH,CAKSC,OAAO,CAACC,GALjB,EAMH,CAPD,CASA,GAAMiC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACnD,QAAD,CAAW6C,WAAX,CAA2B,CAC3CrD,KAAK,WAAIC,MAAM,CAACC,QAAP,CAAgBC,MAApB,qCAAsDK,QAAtD,EAAL,CACCS,IADD,CACM,SAACC,QAAD,CAAc,CAChB,GAAG,CAACA,QAAQ,CAACC,EAAb,CAAiB,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CACjBI,OAAO,CAACC,GAAR,CAAYR,QAAZ,EACAA,QAAQ,CAACqC,IAAT,GAAgBtC,IAAhB,CAAqB,SAACsC,IAAD,CAAU,CAAEF,WAAW,CAACE,IAAD,CAAX,CAAmB,CAApD,EACH,CALD,EAKG/B,KALH,CAKSC,OAAO,CAACC,GALjB,EAMH,CAPD,CASA,GAAMkC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACpD,QAAD,CAAWgC,YAAX,CAA4B,CAC7CxC,KAAK,WAAIC,MAAM,CAACC,QAAP,CAAgBC,MAApB,sCAAuDK,QAAvD,EAAL,CACCS,IADD,CACM,SAACC,QAAD,CAAc,CAChB,GAAG,CAACA,QAAQ,CAACC,EAAb,CAAiB,KAAMC,CAAAA,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX,CACjBI,OAAO,CAACC,GAAR,CAAYR,QAAZ,EACAA,QAAQ,CAACqC,IAAT,GAAgBtC,IAAhB,CAAqB,SAACsC,IAAD,CAAU,CAAEf,YAAY,CAACe,IAAD,CAAZ,CAAoB,CAArD,EACH,CALD,EAKG/B,KALH,CAKSC,OAAO,CAACC,GALjB,EAMH,CAPD,CASA,GAAMmC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACntHmB,mBAuHM1E,aAAa,EAvHnB,kDAuHVqB,QAvHU,oBAuHVA,QAvHU,eAwHW/B,QAAQ,EAxHnB,wCAwHZqF,OAxHY,eAwHHC,UAxHG,8BAyHiBtF,QAAQ,EAzHzB,yCAyHZuF,UAzHY,eAyHAC,aAzHA,8BA0HmBxF,QAAQ,CAAC,EAAD,CA1H3B,yCA0HZyF,WA1HY,eA0HCC,cA1HD,8BA2H6B1F,QAAQ,CAAC,KAAD,CA3HrC,yCA2HZ2F,gBA3HY,eA2HMC,mBA3HN,8BA4H6B5F,QAAQ,CAAC,KAAD,CA5HrC,0CA4HZ6F,gBA5HY,gBA4HMhB,mBA5HN,gCA6Ha7E,QAAQ,CAAC,EAAD,CA7HrB,2CA6HZqB,QA7HY,gBA6HFC,WA7HE,gCA8HatB,QAAQ,CAAC,EAAD,CA9HrB,2CA8HZ8C,QA9HY,gBA8HF8B,WA9HE,gCA+He5E,QAAQ,CAAC,EAAD,CA/HvB,2CA+HZ8D,SA/HY,gBA+HDC,YA/HC,gCAgI+B/D,QAAQ,CAAC,EAAD,CAhIvC,2CAgIZgE,iBAhIY,gBAgIOC,oBAhIP,gCAiIqBjE,QAAQ,CAAC,CAAC2D,IAAI,CAAE,EAAP,CAAWG,SAAS,CAAE,EAAtB,CAAD,CAjI7B,2CAiIZI,YAjIY,gBAiIEC,eAjIF,gBAmInBlE,SAAS,CAAC,UAAM,CACZgF,WAAW,CAAClD,QAAD,CAAWT,WAAX,CAAX,CACA4D,WAAW,CAACnD,QAAD,CAAW6C,WAAX,CAAX,CACAO,YAAY,CAACpD,QAAD,CAAWgC,YAAX,CAAZ,CACH,CAJQ,CAIN,CAAChC,QAAD,CAJM,CAAT,CAMA,MACA,4BAAK,KAAK,CAAE,CAAC+D,OAAO,CAAE,MAAV,CAAkBC,MAAM,CAAE,MAA1B,CAAZ,EACI,2BAAK,SAAS,CAAC,gBAAf,EACI,oBAAC,IAAD,EACA,SAAS,CACL,oBAAC,aAAD,EAAe,SAAS,CAAC,KAAzB,aAFJ,CAGE,SAAS,CAAC,uBAHZ,EAIK1E,QAAQ,CAAC2E,GAAT,CAAa,SAACC,IAAD,CAAOpC,CAAP,QACV,qBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEA,CAArB,EACI,oBAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,YAAY,CAAE,sBAAAqC,CAAC,QAAIZ,CAAAA,UAAU,CAACzB,CAAD,CAAd,EAAhC,CAAmD,YAAY,CAAE,sBAAAqC,CAAC,QAAIZ,CAAAA,UAAU,CAAC,IAAD,CAAd,EAAlE,CAAwF,OAAO,CAAE,iBAAAY,CAAC,QAAIV,CAAAA,aAAa,CAAC3B,CAAD,CAAjB,EAAlG,EACI,oBAAC,YAAD,EAAc,OAAO,WAAKoC,IAAI,CAAChE,SAAV,aAAuBgE,IAAI,CAAC/D,QAA5B,CAArB,EADJ,CAEHmD,OAAO,GAAKxB,CAAZ,CAAgB,2BAAK,GAAG,CAAEtD,SAAV,CAAqB,GAAG,CAAC,GAAzB,CAA6B,MAAM,CAAE,EAArC,EAAhB,CAA6D,wCAF1D,CADJ,CADU,EAAb,CAJL,CADJ,CAcI,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAE,yBAAMqF,CAAAA,mBAAmB,CAAC,IAAD,CAAzB,EAArC,gBAdJ,CADJ,CAiBI,2BAAK,SAAS,CAAC,kBAAf,EACKL,UAAU,GAAKY,SAAf,EACA,wCACG,2BAAK,SAAS,CAAC,0BAAf,EACI,0BAAI,KAAK,CAAE,CAACC,UAAU,CAAE,MAAb,CAAX,EAAkC/E,QAAQ,CAACkE,UAAD,CAAR,CAAqBtD,SAAvD,KAAmEZ,QAAQ,CAACkE,UAAD,CAAR,CAAqBrD,QAAxF,CADJ,CAEI,2BAAK,GAAG,CAAEtB,YAAV,CAAwB,GAAG,CAAC,UAA5B,EAFJ,CAGI,2BAAK,GAAG,CAAED,SAAV,CAAqB,GAAG,CAAC,QAAzB,CAAkC,OAAO,CAAE,kBAAM,CAAC6E,aAAa,CAACW,SAAD,CAAb,CAA0BpB,aAAa,CAACQ,UAAD,CAAalE,QAAb,CAAuBC,WAAvB,CAAb,CAAiD,CAA7H,EAHJ,CADH,CAMG,2BAAK,SAAS,CAAC,4BAAf,EACI,oBAAC,IAAD,EAAM,SAAS,CAAG,oBAAC,aAAD,4BAAlB,CAAuE,SAAS,CAAC,kCAAjF,EACKD,QAAQ,CAACkE,UAAD,CAAR,CAAqBzC,QAArB,CAA8BkD,GAA9B,CAAkC,SAACC,IAAD,CAAOpC,CAAP,QACnC,qBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEA,CAArB,EACI,oBAAC,QAAD,EAAU,MAAM,KAAhB,EACI,oBAAC,YAAD,EAAc,OAAO,CAAEoC,IAAI,CAACtC,IAA5B,EADJ,CAEI,2BAAK,GAAG,CAAE7C,SAAV,CAAqB,GAAG,CAAC,GAAzB,EAFJ,CADJ,CADmC,EAAlC,CADL,CADJ,CAWI,2BAAK,EAAE,CAAC,oBAAR,CAA6B,SAAS,CAAC,kCAAvC,EACI,oBAAC,IAAD,EAAM,SAAS,CAAG,oBAAC,aAAD,2BAAlB,EACKgC,QAAQ,CAACuD,MAAT,CAAgB,SAAAC,EAAE,QAAI,CAACjF,QAAQ,CAACkE,UAAD,CAAR,CAAqBzC,QAArB,CAA8ByD,IAA9B,CAAmC,SAAAC,EAAE,QAAIF,CAAAA,EAAE,CAAC5C,EAAH,GAAU8C,EAAE,CAAC9C,EAAjB,EAArC,CAAL,EAAlB,EAAkFsC,GAAlF,CAAsF,SAACC,IAAD,CAAOpC,CAAP,QACvF,qBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEA,CAArB,EACI,oBAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,OAAO,CAAE,yBAAMX,CAAAA,aAAa,CAAC7B,QAAQ,CAACkE,UAAD,CAAR,CAAqBxD,QAAtB,CAAgCe,QAAQ,CAACuD,MAAT,CAAgB,SAAAC,EAAE,QAAI,CAACjF,QAAQ,CAACkE,UAAD,CAAR,CAAqBzC,QAArB,CAA8ByD,IAA9B,CAAmC,SAAAC,EAAE,QAAIF,CAAAA,EAAE,CAAC5C,EAAH,GAAU8C,EAAE,CAAC9C,EAAjB,EAArC,CAAL,EAAlB,EAAkFG,CAAlF,EAAqFH,EAArH,CAAyHZ,QAAQ,CAACuD,MAAT,CAAgB,SAAAC,EAAE,QAAI,CAACjF,QAAQ,CAACkE,UAAD,CAAR,CAAqBzC,QAArB,CAA8ByD,IAA9B,CAAmC,SAAAC,EAAE,QAAIF,CAAAA,EAAE,CAAC5C,EAAH,GAAU8C,EAAE,CAAC9C,EAAjB,EAArC,CAAL,EAAlB,EAAkFG,CAAlF,EAAqFF,IAA9M,CAAoNtC,QAApN,CAA8NC,WAA9N,CAAnB,EAA1B,EACI,2BAAK,GAAG,CAAET,QAAV,CAAoB,GAAG,CAAC,GAAxB,CAA4B,KAAK,CAAE,CAAC4F,WAAW,CAAE,QAAd,CAAnC,EADJ,CAEI,oBAAC,YAAD,EAAc,OAAO,CAAER,IAAI,CAACtC,IAA5B,EAFJ,CADJ,CADuF,EAAtF,CADL,CADJ,CAWI,oBAAC,MAAD,EAAQ,EAAE,CAAC,uBAAX,CAAmC,OAAO,CAAC,UAA3C,CAAsD,OAAO,CAAE,yBAAMkB,CAAAA,mBAAmB,CAAC,IAAD,CAAzB,EAA/D,CAAgG,SAAS,KAAzG,mBAXJ,CAXJ,CANH,CAFL,CAjBJ,CAqDI,oBAAC,KAAD,EAAO,IAAI,CAAEc,gBAAb,CACA,OAAO,CAAE,yBAAMC,CAAAA,mBAAmB,CAAC,KAAD,CAAzB,EADT,EAEI,2BAAK,SAAS,CAAC,OAAf,EACI,0BAAI,KAAK,CAAE,CAACQ,UAAU,CAAE,MAAb,CAAX,gBADJ,CAEI,4BAAM,UAAU,KAAhB,CAAiB,YAAY,CAAC,KAA9B,CAAoC,SAAS,CAAC,uBAA9C,EACI,oBAAC,SAAD,EAAW,EAAE,CAAC,gBAAd,CAA+B,QAAQ,CAAE,kBAACM,CAAD,QAAOhB,CAAAA,cAAc,kBAAKD,WAAL,EAAkBxD,SAAS,CAAEyE,CAAC,CAACC,MAAF,CAASC,KAAtC,GAArB,EAAzC,CACI,KAAK,CAAC,YADV,CACuB,OAAO,CAAC,UAD/B,CAC0C,KAAK,CAAE,CAACC,MAAM,CAAE,MAAT,CAAiBC,QAAQ,CAAE,GAA3B,CADjD,EADJ,CAGI,oBAAC,SAAD,EAAW,EAAE,CAAC,gBAAd,CAA+B,QAAQ,CAAE,kBAACJ,CAAD,QAAOhB,CAAAA,cAAc,kBAAKD,WAAL,EAAkBvD,QAAQ,CAAEwE,CAAC,CAACC,MAAF,CAASC,KAArC,GAArB,EAAzC,CACI,KAAK,CAAC,WADV,CACsB,OAAO,CAAC,UAD9B,CACyC,KAAK,CAAE,CAACC,MAAM,CAAE,MAAT,CAAiBC,QAAQ,CAAE,GAA3B,CADhD,EAHJ,CAKI,oBAAC,SAAD,EAAW,EAAE,CAAC,gBAAd,CAA+B,QAAQ,CAAE,kBAACJ,CAAD,QAAOhB,CAAAA,cAAc,kBAAKD,WAAL,EAAkBpD,KAAK,CAAGqE,CAAC,CAACC,MAAF,CAASC,KAAnC,GAArB,EAAzC,CACI,KAAK,CAAC,OADV,CACkB,OAAO,CAAC,UAD1B,CACqC,KAAK,CAAE,CAACC,MAAM,CAAE,MAAT,CAAiBC,QAAQ,CAAE,GAA3B,CAD5C,EALJ,CAOI,oBAAC,SAAD,EAAW,EAAE,CAAC,gBAAd,CAA+B,QAAQ,CAAE,kBAACJ,CAAD,QAAOhB,CAAAA,cAAc,kBAAKD,WAAL,EAAkBrD,WAAW,CAAGsE,CAAC,CAACC,MAAF,CAASC,KAAzC,GAArB,EAAzC,CACI,KAAK,CAAC,cADV,CACyB,OAAO,CAAC,UADjC,CAC4C,KAAK,CAAE,CAACC,MAAM,CAAE,MAAT,CAAiBC,QAAQ,CAAE,GAA3B,CADnD,EAPJ,CASI,oBAAC,SAAD,EAAW,EAAE,CAAC,gBAAd,CAA+B,QAAQ,CAAE,kBAACJ,CAAD,QAAOhB,CAAAA,cAAc,kBAAKD,WAAL,EAAkBtD,OAAO,CAAGuE,CAAC,CAACC,MAAF,CAASC,KAArC,GAArB,EAAzC,CACI,KAAK,CAAC,SADV,CACoB,OAAO,CAAC,UAD5B,CACuC,KAAK,CAAE,CAACC,MAAM,CAAE,MAAT,CAAiBC,QAAQ,CAAE,GAA3B,CAD9C,EATJ,CAWI,oBAAC,SAAD,EAAW,EAAE,CAAC,gBAAd,CAA+B,QAAQ,CAAE,kBAACJ,CAAD,QAAOhB,CAAAA,cAAc,kBAAKD,WAAL,EAAkB1D,QAAQ,CAAG2E,CAAC,CAACC,MAAF,CAASC,KAAtC,GAArB,EAAzC,CACI,KAAK,CAAC,UADV,CACqB,OAAO,CAAC,UAD7B,CACwC,KAAK,CAAE,CAACC,MAAM,CAAE,MAAT,CAAiBC,QAAQ,CAAE,GAA3B,CAD/C,EAXJ,CAaI,oBAAC,SAAD,EAAW,EAAE,CAAC,gBAAd,CAA+B,QAAQ,CAAE,kBAACJ,CAAD,QAAOhB,CAAAA,cAAc,kBAAKD,WAAL,EAAkBzD,QAAQ,CAAE0E,CAAC,CAACC,MAAF,CAASC,KAArC,GAArB,EAAzC,CACI,KAAK,CAAC,UADV,CACqB,IAAI,CAAC,UAD1B,CACqC,OAAO,CAAC,UAD7C,CACwD,KAAK,CAAE,CAACC,MAAM,CAAE,MAAT,CAAiBC,QAAQ,CAAE,GAA3B,CAD/D,EAbJ,CAeI,oBAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,KAAK,CAAE,CAACD,MAAM,CAAE,MAAT,CAAiBC,QAAQ,CAAE,GAA3B,CAAlC,CACI,OAAO,CAAE,kBAAM,CAAC5F,OAAO,CAACa,QAAD,CAAW0D,WAAX,CAAwBpE,QAAxB,CAAkCC,WAAlC,CAAP,CAAuDsE,mBAAmB,CAAC,KAAD,CAAnB,CAA2B,CADtG,gBAfJ,CAFJ,CAFJ,CArDJ,CA6EI,oBAAC,KAAD,EAAO,IAAI,CAAEC,gBAAb,CACA,OAAO,CAAE,yBAAMhB,CAAAA,mBAAmB,CAAC,KAAD,CAAzB,EADT,EAEI,2BAAK,SAAS,CAAC,OAAf,CAAuB,EAAE,CAAC,qBAA1B,EACI,0BAAI,KAAK,CAAE,CAACuB,UAAU,CAAE,MAAb,CAAX,sBADJ,CAEI,2BAAK,SAAS,CAAC,gBAAf,EACI,oBAAC,IAAD,EAAM,SAAS,CAAG,oBAAC,aAAD,4BAAlB,CAAuE,SAAS,CAAC,2BAAjF,EACKtC,SAAS,CAACkC,GAAV,CAAc,SAACC,IAAD,CAAOpC,CAAP,QACf,qBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEA,CAArB,EACI,oBAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,OAAO,CAAE,yBAAMD,CAAAA,oBAAoB,CAACC,CAAD,CAAIC,SAAJ,CAAeC,YAAf,CAA6BC,iBAA7B,CAAgDC,oBAAhD,CAAsEC,YAAtE,CAAoFC,eAApF,CAA1B,EAA1B,EACI,oBAAC,YAAD,EAAc,OAAO,CAAE8B,IAAI,CAACtC,IAA5B,EADJ,CAEI,2BAAK,GAAG,CAAE9C,QAAV,CAAoB,GAAG,CAAC,GAAxB,EAFJ,CADJ,CADe,EAAd,CADL,CADJ,CAWI,oBAAC,IAAD,EAAM,SAAS,CAAG,oBAAC,aAAD,2BAAiC,4BAAM,KAAK,CAAE,CAACkG,KAAK,CAAE,OAAR,CAAb,SAAjC,CAAlB,CAAgH,SAAS,CAAC,0BAA1H,EACK/C,iBAAiB,CAACgC,GAAlB,CAAsB,SAACC,IAAD,CAAOpC,CAAP,QACvB,qBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEA,CAArB,EACI,oBAAC,QAAD,MACI,2BAAK,GAAG,CAAE/C,SAAV,CAAqB,GAAG,CAAC,GAAzB,CAA6B,KAAK,CAAE,CAAC2F,WAAW,CAAE,QAAd,CAApC,EADJ,CAEQ,oBAAC,YAAD,EAAc,OAAO,CAAER,IAAI,CAACtC,IAA5B,EAFR,CAGI,2BAAK,SAAS,CAAC,gCAAf,EAAgD,4BAAM,KAAK,CAAE,CAAC8C,WAAW,CAAE,OAAd,CAAb,EAAsCvC,YAAY,CAACJ,SAAb,CAAuBD,CAAvB,EAA0BY,IAAhE,CAAhD,CACI,2BAAK,SAAS,CAAC,kCAAf,EACI,2BAAK,GAAG,CAAE1D,WAAV,CAAuB,MAAM,CAAE,CAA/B,CAAkC,GAAG,CAAC,GAAtC,CAA0C,OAAO,CAAE,kBAAM,CAACmD,YAAY,CAACJ,SAAb,CAAuBD,CAAvB,EAA0BY,IAA1B,GAAkCN,eAAe,CAACG,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,YAAlB,CAAD,CAAf,CAAiD,CAA7I,EADJ,CAEI,2BAAK,GAAG,CAAElD,aAAV,CAAyB,MAAM,CAAE,CAAjC,CAAoC,GAAG,CAAC,GAAxC,CAA4C,OAAO,CAAE,kBAAM,CAAE,GAAGkD,YAAY,CAACJ,SAAb,CAAuBD,CAAvB,EAA0BY,IAA1B,CAAiC,CAApC,CAAuC,CAAEP,YAAY,CAACJ,SAAb,CAAuBD,CAAvB,EAA0BY,IAA1B,GAAkCN,eAAe,CAACG,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,YAAlB,CAAD,CAAf,CAAiD,CAAC,CAA1L,EAFJ,CADJ,CAHJ,CADJ,CADuB,EAAtB,CADL,CAXJ,CAFJ,CA8BI,2BAAK,EAAE,CAAC,0BAAR,EACI,oBAAC,SAAD,EAAW,KAAK,CAAC,cAAjB,CAAgC,QAAQ,CAAE,kBAAAwC,CAAC,CAAI,CAACxC,YAAY,CAACP,IAAb,CAAoB+C,CAAC,CAACC,MAAF,CAASC,KAA7B,CAAoCzC,eAAe,CAACG,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,YAAlB,CAAD,CAAf,CAAiD,CAArI,CAAuI,SAAS,KAAhJ,EADJ,CAEI,2BAAK,GAAG,CAAEjD,WAAV,CAAuB,GAAG,CAAC,SAA3B,CAAqC,MAAM,CAAE,EAA7C,CAAiD,OAAO,CAAE,yBAAMyD,CAAAA,cAAc,CAAC3C,QAAD,CAAWmC,YAAX,CAAyBpB,QAAzB,CAAmC8B,WAAnC,CAAgDC,mBAAhD,CAApB,EAA1D,EAFJ,CA9BJ,CAFJ,CA7EJ,CADA,CAsHH,CA/PD,CAiQA,cAAeO,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../css/PatientsPage.scss'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Button from '@material-ui/core/Button'\r\nimport CaretIcon from '../images/right_caret.png'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { useStateValue } from '../state'\r\nimport TrashIcon from '../images/trash.png'\r\nimport TransferIcon from '../images/transfer.png'\r\nimport PlusIcon from '../images/plus.png'\r\nimport MinusIcon from '../images/minus.png'\r\nimport UpCaretIcon from '../images/up-caret.png'\r\nimport DownCaretIcon from '../images/down-caret.png'\r\nimport ConfirmIcon from '../images/tick.png'\r\n\r\nconst addUser = (therapistsUser, userData, patients, setPatients) => {\r\n    fetch(`${window.location.origin}/adduser`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({therapistsUser: therapistsUser,\r\n            username: userData.username, \r\n            password: userData.password,\r\n            firstName: userData.firstName,\r\n            lastName: userData.lastName,\r\n            address: userData.address,\r\n            phoneNumber: userData.phoneNumber,\r\n            email: userData.email,\r\n            accessLevel: 'patient'}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            if(!response.ok) throw Error(response.statusText)\r\n            \r\n            setPatients(patients.concat({firstName: userData.firstName, lastName: userData.lastName, username: userData.username, workouts: []}))\r\n        }).catch(console.log)\r\n    }\r\n    \r\nconst assignWorkout = (username, WID, workoutName, patients, setPatients) => {\r\n    fetch(`${window.location.origin}/assignworkout`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify({username: username, WID: WID}),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then((response) => {\r\n        if(!response.ok) throw Error(response.statusText)\r\n        \r\n        let changed = JSON.parse(JSON.stringify(patients))\r\n        const userIdx = changed.findIndex(p => p.username === username)\r\n        changed[userIdx][\"workouts\"] = changed[userIdx][\"workouts\"].concat({id: WID, name: workoutName})\r\n        setPatients(changed)\r\n    }).catch(console.log)\r\n}\r\n\r\nconst addExerciseToWorkout = (i, exercises, setExercises, selectedExercises, setSelectedExercises, builtWorkout, setBuiltWorkout) =>  {\r\n    const addedExercise = exercises.splice(i, 1)\r\n    setSelectedExercises(selectedExercises.concat(addedExercise))\r\n    setExercises(Object.assign([], exercises))\r\n    builtWorkout.exercises.push({...addedExercise[0], reps: 1});\r\n    setBuiltWorkout(Object.assign({}, builtWorkout))\r\n}\r\n\r\nconst saveNewWorkout = (username, newWorkout, workouts, setWorkouts, setWorkoutModalOpen) => {\r\n    fetch(`${window.location.origin}/addnewworkout?user=${username}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newWorkout),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then((response) => {\r\n        if(!response.ok) throw Error(response.statusText)\r\n        setWorkoutModalOpen(false)\r\n        response.json().then((json) => { setWorkouts(workouts.concat(json)) })\r\n    }).catch(console.log)\r\n}\r\n\r\nconst deletePatient = (idx, patients, setPatients) => {\r\n    fetch(`${window.location.origin}/deleteuser?user=${patients[idx].username}`, {method: 'DELETE'})\r\n    .then((response) => {\r\n        if(!response.ok) throw Error(response.statusText)\r\n\r\n        const changed = Object.assign([], patients)\r\n        changed.splice(idx, 1)\r\n        console.log(changed)\r\n        setPatients(changed)\r\n    }).catch(console.log)\r\n}\r\n\r\nconst getPatients = (username, setPatients) => {\r\n    fetch(`${window.location.origin}/getpatients?user=${username}`)\r\n    .then((response) => {\r\n        if(!response.ok) throw Error(response.statusText)\r\n        console.log(response)\r\n        response.json().then((json) => { setPatients(json) })\r\n    }).catch(console.log)\r\n}\r\n\r\nconst getWorkouts = (username, setWorkouts) => {\r\n    fetch(`${window.location.origin}/getcreatedworkouts?user=${username}`)\r\n    .then((response) => {\r\n        if(!response.ok) throw Error(response.statusText)\r\n        console.log(response)\r\n        response.json().then((json) => { setWorkouts(json) })\r\n    }).catch(console.log)\r\n}\r\n\r\nconst getExercises = (username, setExercises) => {\r\n    fetch(`${window.location.origin}/getcreatedexercises?user=${username}`)\r\n    .then((response) => {\r\n        if(!response.ok) throw Error(response.statusText)\r\n        console.log(response)\r\n        response.json().then((json) => { setExercises(json) })\r\n    }).catch(console.log)\r\n}\r\n\r\nconst Patients = () => {\r\n    // const tempW = [\r\n    //     {\r\n    //         \"id\": 1,\r\n    //         \"name\": \"first workout!\"\r\n    //     },\r\n    //     {\r\n    //         \"id\": 2,\r\n    //         \"name\": \"A test workout\"\r\n    //     },\r\n    //     {\r\n    //         \"id\": 3,\r\n    //         \"name\": \"Another test workout\"\r\n    //     },\r\n    //     {\r\n    //         \"id\": 4,\r\n    //         \"name\": \"Lots of people do this workout\"\r\n    //     },\r\n    //     {\r\n    //         \"id\": 5,\r\n    //         \"name\": \"So much abs\"\r\n    //     },\r\n    //     {\r\n    //         \"id\": 6,\r\n    //         \"name\": \"Such many biceps\"\r\n    //     }\r\n    // ]\r\n    // const tempP = [\r\n    //     {\r\n    //         \"firstName\": \"jane\",\r\n    //         \"lastName\": \"joe\",\r\n    //         \"username\": \"joeie\",\r\n    //         \"workouts\": [\r\n    //             {\r\n    //                 \"id\": 1,\r\n    //                 \"name\": \"first workout!\"\r\n    //             },\r\n    //             {\r\n    //                 \"id\": 6,\r\n    //                 \"name\": \"Such many biceps\"\r\n    //             }\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         \"firstName\": \"john\",\r\n    //         \"lastName\": \"joe\",\r\n    //         \"username\": \"johnnny\",\r\n    //         \"workouts\": [\r\n    //             {\r\n    //                 \"id\": 1,\r\n    //                 \"name\": \"first workout!\"\r\n    //             }\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         \"firstName\": \"zack\",\r\n    //         \"lastName\": \"mulhstein\",\r\n    //         \"username\": \"zackky\",\r\n    //         \"workouts\": [\r\n    //             {\r\n    //                 \"id\": 1,\r\n    //                 \"name\": \"first workout!\"\r\n    //             },\r\n    //             {\r\n    //                 \"id\": 2,\r\n    //                 \"name\": \"A test workout\"\r\n    //             },\r\n    //             {\r\n    //                 \"id\": 3,\r\n    //                 \"name\": \"Another test workout\"\r\n    //             }\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         \"firstName\": \"Last\",\r\n    //         \"lastName\": \"One\",\r\n    //         \"username\": \"hoping\",\r\n    //         \"workouts\": [\r\n    //             {\r\n    //                 \"id\": 1,\r\n    //                 \"name\": \"first workout!\"\r\n    //             },\r\n    //             {\r\n    //                 \"id\": 3,\r\n    //                 \"name\": \"Another test workout\"\r\n    //             },\r\n    //             {\r\n    //                 \"id\": 4,\r\n    //                 \"name\": \"Lots of people do this workout\"\r\n    //             },\r\n    //             {\r\n    //                 \"id\": 6,\r\n    //                 \"name\": \"Such many biceps\"\r\n    //             }\r\n    //         ]\r\n    //     }\r\n    // ]\r\n    // const tempE = [\r\n    //     {\r\n    //         \"id\": 1,\r\n    //         \"name\": \"Curls: Bicep Curls\"\r\n    //     },\r\n    //     {\r\n    //         \"id\": 2,\r\n    //         \"name\": \"Squat:Air Squat\"\r\n    //     },\r\n    //     {\r\n    //         \"id\": 3,\r\n    //         \"name\": \"Squat:Back Squat\"\r\n    //     },\r\n    //     {\r\n    //         \"id\": 4,\r\n    //         \"name\": \"High Pull:Sumo High Pull\"\r\n    //     },\r\n    //     {\r\n    //         \"id\": 5,\r\n    //         \"name\": \"squat\"\r\n    //     }\r\n    // ]\r\n    const [{ username }, ] = useStateValue()\r\n    const [hoverId, setHoverId] = useState()\r\n    const [selectedId, setSelectedId] = useState()\r\n    const [newUserData, setNewUserData] = useState({})\r\n    const [patientModalOpen, setPatientModalOpen] = useState(false)\r\n    const [workoutModalOpen, setWorkoutModalOpen] = useState(false)\r\n    const [patients, setPatients] = useState([])\r\n    const [workouts, setWorkouts] = useState([])\r\n    const [exercises, setExercises] = useState([])\r\n    const [selectedExercises, setSelectedExercises] = useState([])\r\n    const [builtWorkout, setBuiltWorkout] = useState({name: '', exercises: []})\r\n    \r\n    useEffect(() => {\r\n        getPatients(username, setPatients)\r\n        getWorkouts(username, setWorkouts)\r\n        getExercises(username, setExercises)\r\n    }, [username])\r\n\r\n    return (\r\n    <div style={{display: 'flex', height: \"100%\"}}>\r\n        <div className=\"Patients__list\">\r\n            <List\r\n            subheader={\r\n                <ListSubheader component=\"div\">Patients</ListSubheader>\r\n            } className=\"Patients__list--style\">\r\n                {patients.map((data, i) =>\r\n                    <React.Fragment key={i} >\r\n                        <ListItem button onMouseEnter={_ => setHoverId(i)} onMouseLeave={_ => setHoverId(null)} onClick={_ => setSelectedId(i)}>\r\n                            <ListItemText primary={`${data.firstName} ${data.lastName}`} />\r\n                    {hoverId === i ? <img src={CaretIcon} alt=\">\" height={16}/> : <></>}\r\n                        </ListItem>\r\n                    </React.Fragment>)\r\n                }\r\n            </List>\r\n            <Button variant=\"contained\" onClick={() => setPatientModalOpen(true)}>New Patient</Button>\r\n        </div>\r\n        <div className=\"Patients__window\">\r\n            {selectedId !== undefined && \r\n            (<>\r\n                <div className=\"Patients__window__header\">\r\n                    <h2 style={{marginLeft: \"1rem\"}}>{patients[selectedId].firstName} {patients[selectedId].lastName}</h2>\r\n                    <img src={TransferIcon} alt=\"Transfer\" />\r\n                    <img src={TrashIcon} alt=\"Remove\" onClick={() => {setSelectedId(undefined); deletePatient(selectedId, patients, setPatients)}}/>\r\n                </div>\r\n                <div className=\"Patients__window__workouts\">\r\n                    <List subheader={ <ListSubheader>Prescribed Workouts</ListSubheader> } className=\"Patients__window__workouts__list\">\r\n                        {patients[selectedId].workouts.map((data, i) =>\r\n                        <React.Fragment key={i} >\r\n                            <ListItem button>\r\n                                <ListItemText primary={data.name} />\r\n                                <img src={MinusIcon} alt=\"-\" />\r\n                            </ListItem>\r\n                        </React.Fragment>)\r\n                        }\r\n                    </List>\r\n                    <div id=\"Available-Workouts\" className=\"Patients__window__workouts__list\">\r\n                        <List subheader={ <ListSubheader>Available Workouts</ListSubheader> } >\r\n                            {workouts.filter(w1 => !patients[selectedId].workouts.some(w2 => w1.id === w2.id)).map((data, i) =>\r\n                            <React.Fragment key={i} >\r\n                                <ListItem button onClick={() => assignWorkout(patients[selectedId].username, workouts.filter(w1 => !patients[selectedId].workouts.some(w2 => w1.id === w2.id))[i].id, workouts.filter(w1 => !patients[selectedId].workouts.some(w2 => w1.id === w2.id))[i].name, patients, setPatients)}>\r\n                                    <img src={PlusIcon} alt=\"+\" style={{marginRight: '1.5rem'}}/>\r\n                                    <ListItemText primary={data.name} />\r\n                                </ListItem>\r\n                            </React.Fragment>)\r\n                            }\r\n                        </List>\r\n                        <Button id=\"Create-Workout-Button\" variant=\"outlined\" onClick={() => setWorkoutModalOpen(true)} fullWidth>Create Workout</Button>\r\n                    </div>\r\n                </div>\r\n            </>)\r\n            }\r\n        </div>\r\n        <Modal open={patientModalOpen} \r\n        onClose={() => setPatientModalOpen(false)}> \r\n            <div className=\"Modal\">\r\n                <h2 style={{marginLeft: \"1rem\"}}>NEW PATIENT</h2>\r\n                <form noValidate autoComplete=\"off\" className=\"Patients__modal__form\">\r\n                    <TextField id=\"outlined-basic\" onChange={(e) => setNewUserData({...newUserData, firstName: e.target.value})} \r\n                        label=\"First Name\" variant=\"outlined\" style={{margin: \"1rem\", gridArea: \"a\"}}/>\r\n                    <TextField id=\"outlined-basic\" onChange={(e) => setNewUserData({...newUserData, lastName: e.target.value})} \r\n                        label=\"Last Name\" variant=\"outlined\" style={{margin: \"1rem\", gridArea: \"b\"}}/>\r\n                    <TextField id=\"outlined-basic\" onChange={(e) => setNewUserData({...newUserData, email : e.target.value})}  \r\n                        label=\"Email\" variant=\"outlined\" style={{margin: \"1rem\", gridArea: \"c\"}}/>\r\n                    <TextField id=\"outlined-basic\" onChange={(e) => setNewUserData({...newUserData, phoneNumber : e.target.value})}  \r\n                        label=\"Phone Number\" variant=\"outlined\" style={{margin: \"1rem\", gridArea: \"d\"}}/>\r\n                    <TextField id=\"outlined-basic\" onChange={(e) => setNewUserData({...newUserData, address : e.target.value})}  \r\n                        label=\"Address\" variant=\"outlined\" style={{margin: \"1rem\", gridArea: \"e\"}}/>\r\n                    <TextField id=\"outlined-basic\" onChange={(e) => setNewUserData({...newUserData, username : e.target.value})}  \r\n                        label=\"Username\" variant=\"outlined\" style={{margin: \"1rem\", gridArea: \"f\"}}/>\r\n                    <TextField id=\"outlined-basic\" onChange={(e) => setNewUserData({...newUserData, password: e.target.value})}  \r\n                        label=\"Password\" type=\"password\" variant=\"outlined\" style={{margin: \"1rem\", gridArea: \"g\"}}/>\r\n                    <Button variant=\"outlined\" style={{margin: \"1rem\", gridArea: \"h\"}} \r\n                        onClick={() => {addUser(username, newUserData, patients, setPatients); setPatientModalOpen(false)}}>ADD PATIENT</Button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n        <Modal open={workoutModalOpen} \r\n        onClose={() => setWorkoutModalOpen(false)}> \r\n            <div className=\"Modal\" id=\"WorkoutBuilderModal\">\r\n                <h2 style={{marginLeft: \"1rem\"}}>BUILD NEW WORKOUT</h2>\r\n                <div className=\"WorkoutBuilder\">\r\n                    <List subheader={ <ListSubheader>Available Exercises</ListSubheader> } className=\"WorkoutBuilder__available\">\r\n                        {exercises.map((data, i) =>\r\n                        <React.Fragment key={i} >\r\n                            <ListItem button onClick={() => addExerciseToWorkout(i, exercises, setExercises, selectedExercises, setSelectedExercises, builtWorkout, setBuiltWorkout)}>\r\n                                <ListItemText primary={data.name} />\r\n                                <img src={PlusIcon} alt=\"+\" />\r\n                            </ListItem>\r\n                        </React.Fragment>)\r\n                        }\r\n                    </List>\r\n                    <List subheader={ <ListSubheader>Selected Exercises<span style={{float: 'right'}}>Reps</span></ListSubheader> } className=\"WorkoutBuilder__selected\">\r\n                        {selectedExercises.map((data, i) =>\r\n                        <React.Fragment key={i} >\r\n                            <ListItem>\r\n                                <img src={MinusIcon} alt=\"-\" style={{marginRight: '1.5rem'}}/>\r\n                                    <ListItemText primary={data.name} />\r\n                                <div className=\"WorkoutBuilder__selected--reps\"><span style={{marginRight: '.5rem'}}>{builtWorkout.exercises[i].reps}</span>\r\n                                    <div className=\"WorkoutBuilder__selected__carets\">\r\n                                        <img src={UpCaretIcon} height={8} alt=\"^\" onClick={() => {builtWorkout.exercises[i].reps++; setBuiltWorkout(Object.assign({}, builtWorkout))}} />\r\n                                        <img src={DownCaretIcon} height={8} alt=\"v\" onClick={() => { if(builtWorkout.exercises[i].reps > 1) { builtWorkout.exercises[i].reps--; setBuiltWorkout(Object.assign({}, builtWorkout))}}} />\r\n                                    </div>\r\n                                </div>\r\n                            </ListItem>\r\n                        </React.Fragment>)\r\n                        }\r\n                    </List>\r\n                </div>\r\n                <div id=\"Workout-Confirmation-div\">\r\n                    <TextField label=\"Workout Name\" onChange={e => {builtWorkout.name = e.target.value; setBuiltWorkout(Object.assign({}, builtWorkout))}} fullWidth />\r\n                    <img src={ConfirmIcon} alt=\"Confirm\" height={24} onClick={() => saveNewWorkout(username, builtWorkout, workouts, setWorkouts, setWorkoutModalOpen)} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;"]},"metadata":{},"sourceType":"module"}