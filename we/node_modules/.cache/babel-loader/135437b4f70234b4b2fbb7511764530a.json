{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\mtp8\\\\Documents\\\\GitHub\\\\we\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{Route,BrowserRouter as Router,Switch}from'react-router-dom';import LoginPage from'./pages/LoginPage';import Workouts from'./pages/Workouts';import Progress from'./pages/Progress';import Dashboard from'./pages/Dashboard';import Account from'./pages/AccountPage';import PageNotFound from'./pages/PageNotFound';import NavRoute from'./components/NavRoute';import Patients from'./pages/PatientsPage';import Ranking from'./pages/RankingPage';import TherapistProgress from'./pages/TherapistProgress';import{useStateValue}from'./state';var availableRoutes=function availableRoutes(accessLevel,username){switch(accessLevel){case'patient':return React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/login\",render:function render(props){return React.createElement(LoginPage,props);}}),React.createElement(NavRoute,{exact:true,path:\"/\",component:Dashboard}),React.createElement(NavRoute,{exact:true,path:\"/account\",component:Account}),React.createElement(NavRoute,{exact:true,path:\"/workouts\",component:Workouts}),React.createElement(NavRoute,{exact:true,path:\"/progress\",component:Progress,innerProps:{username:username}}),React.createElement(NavRoute,{exact:true,path:\"/ranking\",component:Ranking}),React.createElement(NavRoute,{component:PageNotFound}));case'therapist':return React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/login\",render:function render(props){return React.createElement(LoginPage,props);}}),React.createElement(NavRoute,{exact:true,path:\"/\",component:Dashboard}),React.createElement(NavRoute,{exact:true,path:\"/account\",component:Account}),React.createElement(NavRoute,{exact:true,path:\"/patients\",component:Patients}),React.createElement(NavRoute,{exact:true,path:\"/progress\",component:TherapistProgress}),React.createElement(NavRoute,{component:PageNotFound}));case'admin':return;default:return React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/login\",render:function render(props){return React.createElement(LoginPage,props);}}),React.createElement(NavRoute,{component:PageNotFound}));}};var Routing=function Routing(){var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,1),_useStateValue2$=_useStateValue2[0],accessLevel=_useStateValue2$.accessLevel,username=_useStateValue2$.username;return React.createElement(Router,null,availableRoutes(accessLevel,username));};export default Routing;","map":{"version":3,"sources":["C:/Users/mtp8/Documents/GitHub/we/src/Routing.js"],"names":["React","Route","BrowserRouter","Router","Switch","LoginPage","Workouts","Progress","Dashboard","Account","PageNotFound","NavRoute","Patients","Ranking","TherapistProgress","useStateValue","availableRoutes","accessLevel","username","props","Routing"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport LoginPage from './pages/LoginPage'\r\nimport Workouts from './pages/Workouts'\r\nimport Progress from './pages/Progress'\r\nimport Dashboard from './pages/Dashboard'\r\nimport Account from './pages/AccountPage'\r\nimport PageNotFound from './pages/PageNotFound'\r\nimport NavRoute from './components/NavRoute'\r\nimport Patients from './pages/PatientsPage'\r\nimport Ranking from './pages/RankingPage'\r\nimport TherapistProgress from './pages/TherapistProgress'\r\nimport { useStateValue } from './state'\r\n\r\nconst availableRoutes = (accessLevel, username) => {\r\n    switch(accessLevel) {\r\n      case 'patient':\r\n        return(\r\n            <Switch>\r\n                <Route exact path=\"/login\" render={props => <LoginPage {...props} />}/>\r\n                <NavRoute exact path=\"/\" component={Dashboard} />\r\n                <NavRoute exact path=\"/account\" component={Account} />\r\n                <NavRoute exact path=\"/workouts\" component={Workouts} />\r\n                <NavRoute exact path=\"/progress\" component={Progress} innerProps={{username: username}} />\r\n                <NavRoute exact path=\"/ranking\" component={Ranking} />\r\n                <NavRoute component={PageNotFound} />\r\n            </Switch>\r\n        )\r\n      case 'therapist':\r\n        return(\r\n            <Switch>\r\n                <Route exact path=\"/login\" render={props => <LoginPage {...props} />}/>\r\n                <NavRoute exact path=\"/\" component={Dashboard} />\r\n                <NavRoute exact path=\"/account\" component={Account} />\r\n                <NavRoute exact path=\"/patients\" component={Patients} />\r\n                <NavRoute exact path=\"/progress\" component={TherapistProgress} />\r\n                <NavRoute component={PageNotFound} />\r\n            </Switch>\r\n        )\r\n      case 'admin':\r\n        return;\r\n      default:\r\n        return(\r\n            <Switch>\r\n                <Route exact path=\"/login\" render={props => <LoginPage {...props} />}/>\r\n                <NavRoute component={PageNotFound} />\r\n            </Switch>\r\n        )\r\n    }\r\n  }\r\n  \r\n  const Routing = () => {\r\n    const [{accessLevel, username},] = useStateValue()\r\n    return(\r\n      <Router>\r\n          { availableRoutes(accessLevel, username) }\r\n      </Router>\r\n    )\r\n  }\r\n\r\n  export default Routing;"]},"metadata":{},"sourceType":"module"}